{{- if and .Values.contour.enabled .Values.contour.createCustomResource }}
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
    "helm.sh/hook": crd-install
    {{- if .Values.contour.customResourceDeletePolicy }}
    "helm.sh/hook-delete-policy": {{ .Values.contour.customResourceDeletePolicy }}
    {{- end }}
  labels: {{- include "contour.labels" . | nindent 4 }}
  name: tlscertificatedelegations.contour.heptio.com
spec:
  group: contour.heptio.com
  names:
    kind: TLSCertificateDelegation
    listKind: TLSCertificateDelegationList
    plural: tlscertificatedelegations
    singular: tlscertificatedelegation
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
        See design/tls-certificate-delegation.md for details.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TLSCertificateDelegationSpec defines the spec of the CRD
          properties:
            delegations:
              items:
                description: CertificateDelegation maps the authority to reference
                  a secret in the current namespace to a set of namespaces.
                properties:
                  secretName:
                    description: required, the name of a secret in the current namespace.
                    type: string
                  targetNamespaces:
                    description: required, the namespaces the authority to reference
                      the the secret will be delegated to. If TargetNamespaces is
                      nil or empty, the CertificateDelegation' is ignored. If the
                      TargetNamespace list contains the character, "*" the secret
                      will be delegated to all namespaces.
                    items:
                      type: string
                    type: array
                required:
                - secretName
                - targetNamespaces
                type: object
              type: array
          required:
          - delegations
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
    "helm.sh/hook": crd-install
    {{- if .Values.contour.customResourceDeletePolicy }}
    "helm.sh/hook-delete-policy": {{ .Values.contour.customResourceDeletePolicy }}
    {{- end }}
  labels: {{- include "contour.labels" . | nindent 4 }}
  name: tlscertificatedelegations.projectcontour.io
spec:
  group: projectcontour.io
  names:
    kind: TLSCertificateDelegation
    listKind: TLSCertificateDelegationList
    plural: tlscertificatedelegations
    shortNames:
    - tlscerts
    singular: tlscertificatedelegation
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
        See design/tls-certificate-delegation.md for details.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TLSCertificateDelegationSpec defines the spec of the CRD
          properties:
            delegations:
              items:
                description: CertificateDelegation maps the authority to reference
                  a secret in the current namespace to a set of namespaces.
                properties:
                  secretName:
                    description: required, the name of a secret in the current namespace.
                    type: string
                  targetNamespaces:
                    description: required, the namespaces the authority to reference
                      the the secret will be delegated to. If TargetNamespaces is
                      nil or empty, the CertificateDelegation' is ignored. If the
                      TargetNamespace list contains the character, "*" the secret
                      will be delegated to all namespaces.
                    items:
                      type: string
                    type: array
                required:
                - secretName
                - targetNamespaces
                type: object
              type: array
          required:
          - delegations
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
{{- end }}
