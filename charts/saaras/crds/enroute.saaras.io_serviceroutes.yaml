---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: serviceroutes.enroute.saaras.io
spec:
  group: enroute.saaras.io
  names:
    kind: ServiceRoute
    listKind: ServiceRouteList
    plural: serviceroutes
    shortNames:
    - svcroute
    - svcroutes
    singular: serviceroute
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ServiceRoute can be used to provide Route Specification for a
          service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              enrouteConfigScope:
                items:
                  type: string
                type: array
              fqdn:
                description: Fqdn of the GatewayHost
                type: string
              route:
                description: Route is the route for service
                properties:
                  conditions:
                    description: Conditions are a set of routing properties that is
                      applied to an GatewayHost in a namespace.
                    items:
                      description: Condition are policies that are applied on top
                        of GatewayHost. One of Prefix or Header must be provided.
                      properties:
                        header:
                          description: Header specifies the header condition to match.
                          properties:
                            contains:
                              description: Contains is true if the Header containing
                                this string is present in the request.
                              type: string
                            exact:
                              description: Exact is true if the Header containing
                                this string matches exactly in the request.
                              type: string
                            name:
                              description: Name is the name of the header to match
                                on. Name is required. Header names are case insensitive.
                              type: string
                            notcontains:
                              description: NotContains is true if the Header containing
                                this string is not present in the request.
                              type: string
                            notexact:
                              description: NotExact is true if the Header containing
                                this string doesn't match exactly in the request.
                              type: string
                            present:
                              description: Present is true if the Header is present
                                in the request.
                              type: boolean
                          required:
                          - name
                          type: object
                        prefix:
                          description: Prefix defines a prefix match for a request.
                          type: string
                      type: object
                    type: array
                  delegate:
                    description: Delegate specifies that this route should be delegated
                      to another GatewayHost
                    properties:
                      name:
                        description: Name of the GatewayHost
                        type: string
                      namespace:
                        description: Namespace of the GatewayHost
                        type: string
                    required:
                    - name
                    type: object
                  disableExtauth:
                    description: Disable external authorization for this route
                    type: boolean
                  enableWebsockets:
                    description: Enables websocket support for the route
                    type: boolean
                  filters:
                    description: Filters attached to this route
                    items:
                      properties:
                        name:
                          description: Name of the filter attached to this route
                          type: string
                        type:
                          description: Type of the filter attached to this route
                          type: string
                      type: object
                    type: array
                  permitInsecure:
                    description: Allow this path to respond to insecure requests over
                      HTTP which are normally not permitted when a `virtualhost.tls`
                      block is present.
                    type: boolean
                  precedence:
                    description: Specify precedence for this Route, a higher precedence
                      places the route higher up in match sequence
                    format: int32
                    type: integer
                  prefixRewrite:
                    description: Indicates that during forwarding, the matched prefix
                      (or path) should be swapped with this value
                    type: string
                  retryPolicy:
                    description: The retry policy for this route
                    properties:
                      count:
                        description: NumRetries is maximum allowed number of retries.
                          If not supplied, the number of retries is zero.
                        format: int32
                        type: integer
                      perTryTimeout:
                        description: PerTryTimeout specifies the timeout per retry
                          attempt. Ignored if NumRetries is not supplied.
                        type: string
                      retriableStatusCodes:
                        description: HTTP status codes that should trigger a retry
                          in addition to those specified by RetryOn.
                        items:
                          format: int32
                          type: integer
                        type: array
                      retryOn:
                        description: RetryOn specifies the conditions on which to
                          retry a request.
                        type: string
                    required:
                    - count
                    type: object
                  services:
                    description: Services are the services to proxy traffic
                    items:
                      description: Service defines an upstream to proxy traffic to
                      properties:
                        clientvalidation:
                          description: ClientValidation defines a way to provide client's
                            identity encoded in SAN in a certificate. The certificate
                            to send to backend service that it'll verify
                          properties:
                            caSecret:
                              description: Name of the Kubernetes secret be used to
                                validate the certificate presented by the backend
                              type: string
                            subjectName:
                              description: Key which is expected to be present in
                                the 'subjectAltName' of the presented certificate
                              type: string
                          required:
                          - caSecret
                          - subjectName
                          type: object
                        healthCheck:
                          description: HealthCheck defines optional healthchecks on
                            the upstream service
                          properties:
                            healthyThresholdCount:
                              description: The number of healthy health checks required
                                before a host is marked healthy
                              format: int32
                              type: integer
                            host:
                              description: The value of the host header in the HTTP
                                health check request. If left empty (default value),
                                the name "contour-envoy-healthcheck" will be used.
                              type: string
                            intervalSeconds:
                              description: The interval (seconds) between health checks
                              format: int64
                              type: integer
                            path:
                              description: HTTP endpoint used to perform health checks
                                on upstream service
                              type: string
                            timeoutSeconds:
                              description: The time to wait (seconds) for a health
                                check response
                              format: int64
                              type: integer
                            unhealthyThresholdCount:
                              description: The number of unhealthy health checks required
                                before a host is marked unhealthy
                              format: int32
                              type: integer
                          required:
                          - healthyThresholdCount
                          - intervalSeconds
                          - path
                          - timeoutSeconds
                          - unhealthyThresholdCount
                          type: object
                        name:
                          description: Name is the name of Kubernetes service to proxy
                            traffic. Names defined here will be used to look up corresponding
                            endpoints which contain the ips to route.
                          type: string
                        port:
                          description: Port (defined as Integer) to proxy traffic
                            to since a service can have multiple defined
                          exclusiveMaximum: true
                          maximum: 65536
                          minimum: 1
                          type: integer
                        protocol:
                          description: Protocol may be used to specify (or override)
                            the protocol used to reach this Service. Values may be
                            tls, h2, h2c. If omitted, protocol-selection falls back
                            on Service annotations.
                          enum:
                          - h2
                          - h2c
                          - tls
                          type: string
                        strategy:
                          description: LB Algorithm to apply (see https://github.com/saarasio/enroute/enroute-dp/blob/master/design/gatewayhost-design.md#load-balancing)
                          type: string
                        validation:
                          description: UpstreamValidation defines how to verify the
                            backend service's certificate
                          properties:
                            caSecret:
                              description: Name of the Kubernetes secret be used to
                                validate the certificate presented by the backend
                              type: string
                            subjectName:
                              description: Key which is expected to be present in
                                the 'subjectAltName' of the presented certificate
                              type: string
                          required:
                          - caSecret
                          - subjectName
                          type: object
                        weight:
                          description: Weight defines percentage of traffic to balance
                            traffic
                          format: int32
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                  timeoutPolicy:
                    description: The timeout policy for this route
                    properties:
                      cluster_connect:
                        description: Timeout for new network connections, if not set
                          default value is 5s
                        type: string
                      cluster_idle:
                        description: Idle Timeout for upstream connections, duration
                          for which there are no active connections default is 1h,
                          to disable, set it to 0
                        type: string
                      cluster_max_duration:
                        description: Maximum duration for connection
                        type: string
                      idle:
                        type: string
                      request:
                        description: Timeout for receiving a response from the server
                          after processing a request from client. If not supplied
                          the timeout duration is undefined.
                        type: string
                    required:
                    - request
                    type: object
                type: object
            required:
            - fqdn
            - route
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
